# Multi-stage Dockerfile for API in monorepo
FROM node:18-alpine AS builder

# Install dependencies needed for building
RUN apk add --no-cache python3 make g++

# Install pnpm
RUN corepack enable && corepack prepare pnpm@8.10.0 --activate

# Set working directory
WORKDIR /app

# Copy monorepo files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/database/package.json ./packages/database/
COPY apps/api/package.json apps/api/tsconfig.json apps/api/nest-cli.json ./apps/api/

# Install all dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY packages/database ./packages/database
COPY apps/api/src ./apps/api/src

# Build the API
WORKDIR /app/apps/api
RUN pnpm build

# Production image
FROM node:18-alpine AS runner

WORKDIR /app

# Copy package files
COPY --from=builder /app/apps/api/package.json ./
COPY --from=builder /app/apps/api/dist ./dist

# Copy production dependencies only
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/apps/api/node_modules ./apps/api/node_modules

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001
USER nodejs

# Start the application
CMD ["node", "dist/main.js"]